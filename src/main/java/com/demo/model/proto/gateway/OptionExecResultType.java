// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trade_type_def.proto

package com.demo.model.proto.gateway;

/**
 * <pre>
 * 期权执行结果类型
 * </pre>
 *
 * Protobuf enum {@code com.demo.model.proto.gateway.OptionExecResultType}
 */
public enum OptionExecResultType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 未知
   * </pre>
   *
   * <code>UNKNOWN_EXEC_RESULT = 0;</code>
   */
  UNKNOWN_EXEC_RESULT(0),
  /**
   * <pre>
   * 没有执行
   * </pre>
   *
   * <code>NO_EXEC = 1;</code>
   */
  NO_EXEC(1),
  /**
   * <pre>
   * 已经取消
   * </pre>
   *
   * <code>CANCELED_OPT = 2;</code>
   */
  CANCELED_OPT(2),
  /**
   * <pre>
   * 执行成功
   * </pre>
   *
   * <code>EXEC_OK = 3;</code>
   */
  EXEC_OK(3),
  /**
   * <pre>
   * 期权持仓不足
   * </pre>
   *
   * <code>NO_POSITION = 4;</code>
   */
  NO_POSITION(4),
  /**
   * <pre>
   * 资金不足
   * </pre>
   *
   * <code>NO_DEPOSIT = 5;</code>
   */
  NO_DEPOSIT(5),
  /**
   * <pre>
   * 会员不存在
   * </pre>
   *
   * <code>NO_PARTICIPANT = 6;</code>
   */
  NO_PARTICIPANT(6),
  /**
   * <pre>
   * 客户不存在
   * </pre>
   *
   * <code>NO_CLIENT = 7;</code>
   */
  NO_CLIENT(7),
  /**
   * <pre>
   * 合约不存在
   * </pre>
   *
   * <code>NO_INSTRUMENT = 8;</code>
   */
  NO_INSTRUMENT(8),
  /**
   * <pre>
   * 没有权限
   * </pre>
   *
   * <code>NO_RIGHT = 9;</code>
   */
  NO_RIGHT(9),
  /**
   * <pre>
   * 无效的数量
   * </pre>
   *
   * <code>INVALID_VOL = 10;</code>
   */
  INVALID_VOL(10),
  /**
   * <pre>
   * 没有足够历史成交
   * </pre>
   *
   * <code>NO_ENOUGH_HIS_TRADE = 11;</code>
   */
  NO_ENOUGH_HIS_TRADE(11),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 未知
   * </pre>
   *
   * <code>UNKNOWN_EXEC_RESULT = 0;</code>
   */
  public static final int UNKNOWN_EXEC_RESULT_VALUE = 0;
  /**
   * <pre>
   * 没有执行
   * </pre>
   *
   * <code>NO_EXEC = 1;</code>
   */
  public static final int NO_EXEC_VALUE = 1;
  /**
   * <pre>
   * 已经取消
   * </pre>
   *
   * <code>CANCELED_OPT = 2;</code>
   */
  public static final int CANCELED_OPT_VALUE = 2;
  /**
   * <pre>
   * 执行成功
   * </pre>
   *
   * <code>EXEC_OK = 3;</code>
   */
  public static final int EXEC_OK_VALUE = 3;
  /**
   * <pre>
   * 期权持仓不足
   * </pre>
   *
   * <code>NO_POSITION = 4;</code>
   */
  public static final int NO_POSITION_VALUE = 4;
  /**
   * <pre>
   * 资金不足
   * </pre>
   *
   * <code>NO_DEPOSIT = 5;</code>
   */
  public static final int NO_DEPOSIT_VALUE = 5;
  /**
   * <pre>
   * 会员不存在
   * </pre>
   *
   * <code>NO_PARTICIPANT = 6;</code>
   */
  public static final int NO_PARTICIPANT_VALUE = 6;
  /**
   * <pre>
   * 客户不存在
   * </pre>
   *
   * <code>NO_CLIENT = 7;</code>
   */
  public static final int NO_CLIENT_VALUE = 7;
  /**
   * <pre>
   * 合约不存在
   * </pre>
   *
   * <code>NO_INSTRUMENT = 8;</code>
   */
  public static final int NO_INSTRUMENT_VALUE = 8;
  /**
   * <pre>
   * 没有权限
   * </pre>
   *
   * <code>NO_RIGHT = 9;</code>
   */
  public static final int NO_RIGHT_VALUE = 9;
  /**
   * <pre>
   * 无效的数量
   * </pre>
   *
   * <code>INVALID_VOL = 10;</code>
   */
  public static final int INVALID_VOL_VALUE = 10;
  /**
   * <pre>
   * 没有足够历史成交
   * </pre>
   *
   * <code>NO_ENOUGH_HIS_TRADE = 11;</code>
   */
  public static final int NO_ENOUGH_HIS_TRADE_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static OptionExecResultType valueOf(int value) {
    return forNumber(value);
  }

  public static OptionExecResultType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_EXEC_RESULT;
      case 1: return NO_EXEC;
      case 2: return CANCELED_OPT;
      case 3: return EXEC_OK;
      case 4: return NO_POSITION;
      case 5: return NO_DEPOSIT;
      case 6: return NO_PARTICIPANT;
      case 7: return NO_CLIENT;
      case 8: return NO_INSTRUMENT;
      case 9: return NO_RIGHT;
      case 10: return INVALID_VOL;
      case 11: return NO_ENOUGH_HIS_TRADE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<OptionExecResultType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      OptionExecResultType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<OptionExecResultType>() {
          public OptionExecResultType findValueByNumber(int number) {
            return OptionExecResultType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return TradeTypeDef.getDescriptor()
        .getEnumTypes().get(15);
  }

  private static final OptionExecResultType[] VALUES = values();

  public static OptionExecResultType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private OptionExecResultType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.demo.model.proto.gateway.OptionExecResultType)
}

