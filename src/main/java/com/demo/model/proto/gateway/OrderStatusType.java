// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trade_type_def.proto

package com.demo.model.proto.gateway;

/**
 * <pre>
 * 委托状态 
 * </pre>
 *
 * Protobuf enum {@code com.demo.model.proto.gateway.OrderStatusType}
 */
public enum OrderStatusType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN_ORDER_STATUS_TYPE = 0;</code>
   */
  UNKNOWN_ORDER_STATUS_TYPE(0),
  /**
   * <pre>
   * 终端提交
   * </pre>
   *
   * <code>SUBMIT = 1;</code>
   */
  SUBMIT(1),
  /**
   * <pre>
   * 已受理
   * </pre>
   *
   * <code>ACCEPT = 2;</code>
   */
  ACCEPT(2),
  /**
   * <pre>
   * 策略待触发
   * </pre>
   *
   * <code>TRIGGERING = 3;</code>
   */
  TRIGGERING(3),
  /**
   * <pre>
   * 交易所待触发
   * </pre>
   *
   * <code>EXCTRIGGERING = 4;</code>
   */
  EXCTRIGGERING(4),
  /**
   * <pre>
   * 已排队
   * </pre>
   *
   * <code>QUEUED = 5;</code>
   */
  QUEUED(5),
  /**
   * <pre>
   * 部分成交
   * </pre>
   *
   * <code>PARTFINISHED = 6;</code>
   */
  PARTFINISHED(6),
  /**
   * <pre>
   * 完全成交  完全成交
   * </pre>
   *
   * <code>FINISHED = 7;</code>
   */
  FINISHED(7),
  /**
   * <pre>
   * 待撤消(排队临时状态) 待撤消(排队临时状态)
   * </pre>
   *
   * <code>CANCELING = 8;</code>
   */
  CANCELING(8),
  /**
   * <pre>
   * 待修改(排队临时状态) 完全撤单
   * </pre>
   *
   * <code>MODIFYING = 9;</code>
   */
  MODIFYING(9),
  /**
   * <pre>
   * 完全撤单 指令失败
   * </pre>
   *
   * <code>CANCELED = 10;</code>
   */
  CANCELED(10),
  /**
   * <pre>
   * 已撤余单
   * </pre>
   *
   * <code>LEFTDELETED = 11;</code>
   */
  LEFTDELETED(11),
  /**
   * <pre>
   * 指令失败
   * </pre>
   *
   * <code>FAIL = 12;</code>
   */
  FAIL(12),
  /**
   * <pre>
   * 策略删除
   * </pre>
   *
   * <code>DELETED = 13;</code>
   */
  DELETED(13),
  /**
   * <pre>
   * 已挂起
   * </pre>
   *
   * <code>SUPPENDED = 14;</code>
   */
  SUPPENDED(14),
  /**
   * <pre>
   * 到期删除
   * </pre>
   *
   * <code>DELETEDFOREXPIRE = 15;</code>
   */
  DELETEDFOREXPIRE(15),
  /**
   * <pre>
   * 已生效——询价成功）
   * </pre>
   *
   * <code>EFFECT = 16;</code>
   */
  EFFECT(16),
  /**
   * <pre>
   * 已申请——行权、弃权、套利等申请成功）
   * </pre>
   *
   * <code>APPLY = 17;</code>
   */
  APPLY(17),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_ORDER_STATUS_TYPE = 0;</code>
   */
  public static final int UNKNOWN_ORDER_STATUS_TYPE_VALUE = 0;
  /**
   * <pre>
   * 终端提交
   * </pre>
   *
   * <code>SUBMIT = 1;</code>
   */
  public static final int SUBMIT_VALUE = 1;
  /**
   * <pre>
   * 已受理
   * </pre>
   *
   * <code>ACCEPT = 2;</code>
   */
  public static final int ACCEPT_VALUE = 2;
  /**
   * <pre>
   * 策略待触发
   * </pre>
   *
   * <code>TRIGGERING = 3;</code>
   */
  public static final int TRIGGERING_VALUE = 3;
  /**
   * <pre>
   * 交易所待触发
   * </pre>
   *
   * <code>EXCTRIGGERING = 4;</code>
   */
  public static final int EXCTRIGGERING_VALUE = 4;
  /**
   * <pre>
   * 已排队
   * </pre>
   *
   * <code>QUEUED = 5;</code>
   */
  public static final int QUEUED_VALUE = 5;
  /**
   * <pre>
   * 部分成交
   * </pre>
   *
   * <code>PARTFINISHED = 6;</code>
   */
  public static final int PARTFINISHED_VALUE = 6;
  /**
   * <pre>
   * 完全成交  完全成交
   * </pre>
   *
   * <code>FINISHED = 7;</code>
   */
  public static final int FINISHED_VALUE = 7;
  /**
   * <pre>
   * 待撤消(排队临时状态) 待撤消(排队临时状态)
   * </pre>
   *
   * <code>CANCELING = 8;</code>
   */
  public static final int CANCELING_VALUE = 8;
  /**
   * <pre>
   * 待修改(排队临时状态) 完全撤单
   * </pre>
   *
   * <code>MODIFYING = 9;</code>
   */
  public static final int MODIFYING_VALUE = 9;
  /**
   * <pre>
   * 完全撤单 指令失败
   * </pre>
   *
   * <code>CANCELED = 10;</code>
   */
  public static final int CANCELED_VALUE = 10;
  /**
   * <pre>
   * 已撤余单
   * </pre>
   *
   * <code>LEFTDELETED = 11;</code>
   */
  public static final int LEFTDELETED_VALUE = 11;
  /**
   * <pre>
   * 指令失败
   * </pre>
   *
   * <code>FAIL = 12;</code>
   */
  public static final int FAIL_VALUE = 12;
  /**
   * <pre>
   * 策略删除
   * </pre>
   *
   * <code>DELETED = 13;</code>
   */
  public static final int DELETED_VALUE = 13;
  /**
   * <pre>
   * 已挂起
   * </pre>
   *
   * <code>SUPPENDED = 14;</code>
   */
  public static final int SUPPENDED_VALUE = 14;
  /**
   * <pre>
   * 到期删除
   * </pre>
   *
   * <code>DELETEDFOREXPIRE = 15;</code>
   */
  public static final int DELETEDFOREXPIRE_VALUE = 15;
  /**
   * <pre>
   * 已生效——询价成功）
   * </pre>
   *
   * <code>EFFECT = 16;</code>
   */
  public static final int EFFECT_VALUE = 16;
  /**
   * <pre>
   * 已申请——行权、弃权、套利等申请成功）
   * </pre>
   *
   * <code>APPLY = 17;</code>
   */
  public static final int APPLY_VALUE = 17;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static OrderStatusType valueOf(int value) {
    return forNumber(value);
  }

  public static OrderStatusType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_ORDER_STATUS_TYPE;
      case 1: return SUBMIT;
      case 2: return ACCEPT;
      case 3: return TRIGGERING;
      case 4: return EXCTRIGGERING;
      case 5: return QUEUED;
      case 6: return PARTFINISHED;
      case 7: return FINISHED;
      case 8: return CANCELING;
      case 9: return MODIFYING;
      case 10: return CANCELED;
      case 11: return LEFTDELETED;
      case 12: return FAIL;
      case 13: return DELETED;
      case 14: return SUPPENDED;
      case 15: return DELETEDFOREXPIRE;
      case 16: return EFFECT;
      case 17: return APPLY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<OrderStatusType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      OrderStatusType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<OrderStatusType>() {
          public OrderStatusType findValueByNumber(int number) {
            return OrderStatusType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return TradeTypeDef.getDescriptor()
        .getEnumTypes().get(8);
  }

  private static final OrderStatusType[] VALUES = values();

  public static OrderStatusType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private OrderStatusType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.demo.model.proto.gateway.OrderStatusType)
}

