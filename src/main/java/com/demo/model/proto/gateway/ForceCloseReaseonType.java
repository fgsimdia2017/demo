// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trade_type_def.proto

package com.demo.model.proto.gateway;

/**
 * <pre>
 * 报单强平原因
 * </pre>
 *
 * Protobuf enum {@code com.demo.model.proto.gateway.ForceCloseReaseonType}
 */
public enum ForceCloseReaseonType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 未知的强平原因
   * </pre>
   *
   * <code>UNKNOWN_FORCE_CLOSE = 0;</code>
   */
  UNKNOWN_FORCE_CLOSE(0),
  /**
   * <pre>
   * 非强平
   * </pre>
   *
   * <code>NOT_FORCE_CLOSE = 1;</code>
   */
  NOT_FORCE_CLOSE(1),
  /**
   * <pre>
   * 资金不足
   * </pre>
   *
   * <code>LACK_DEPOSIT = 2;</code>
   */
  LACK_DEPOSIT(2),
  /**
   * <pre>
   * 客户超仓
   * </pre>
   *
   * <code>CLIENT_OVER_POSITION_LIMIT = 3;</code>
   */
  CLIENT_OVER_POSITION_LIMIT(3),
  /**
   * <pre>
   * 会员超仓
   * </pre>
   *
   * <code>MEMBER_OVER_POSTION_LIMIT = 4;</code>
   */
  MEMBER_OVER_POSTION_LIMIT(4),
  /**
   * <pre>
   * 持仓非整数倍
   * </pre>
   *
   * <code>NOT_MULTIPLE = 5;</code>
   */
  NOT_MULTIPLE(5),
  /**
   * <pre>
   * 违规
   * </pre>
   *
   * <code>VIOLATION = 6;</code>
   */
  VIOLATION(6),
  /**
   * <pre>
   * 其他
   * </pre>
   *
   * <code>OTHER = 7;</code>
   */
  OTHER(7),
  /**
   * <pre>
   * 自然人临近交割
   * </pre>
   *
   * <code>PERSON_DELIV = 8;</code>
   */
  PERSON_DELIV(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 未知的强平原因
   * </pre>
   *
   * <code>UNKNOWN_FORCE_CLOSE = 0;</code>
   */
  public static final int UNKNOWN_FORCE_CLOSE_VALUE = 0;
  /**
   * <pre>
   * 非强平
   * </pre>
   *
   * <code>NOT_FORCE_CLOSE = 1;</code>
   */
  public static final int NOT_FORCE_CLOSE_VALUE = 1;
  /**
   * <pre>
   * 资金不足
   * </pre>
   *
   * <code>LACK_DEPOSIT = 2;</code>
   */
  public static final int LACK_DEPOSIT_VALUE = 2;
  /**
   * <pre>
   * 客户超仓
   * </pre>
   *
   * <code>CLIENT_OVER_POSITION_LIMIT = 3;</code>
   */
  public static final int CLIENT_OVER_POSITION_LIMIT_VALUE = 3;
  /**
   * <pre>
   * 会员超仓
   * </pre>
   *
   * <code>MEMBER_OVER_POSTION_LIMIT = 4;</code>
   */
  public static final int MEMBER_OVER_POSTION_LIMIT_VALUE = 4;
  /**
   * <pre>
   * 持仓非整数倍
   * </pre>
   *
   * <code>NOT_MULTIPLE = 5;</code>
   */
  public static final int NOT_MULTIPLE_VALUE = 5;
  /**
   * <pre>
   * 违规
   * </pre>
   *
   * <code>VIOLATION = 6;</code>
   */
  public static final int VIOLATION_VALUE = 6;
  /**
   * <pre>
   * 其他
   * </pre>
   *
   * <code>OTHER = 7;</code>
   */
  public static final int OTHER_VALUE = 7;
  /**
   * <pre>
   * 自然人临近交割
   * </pre>
   *
   * <code>PERSON_DELIV = 8;</code>
   */
  public static final int PERSON_DELIV_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static ForceCloseReaseonType valueOf(int value) {
    return forNumber(value);
  }

  public static ForceCloseReaseonType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_FORCE_CLOSE;
      case 1: return NOT_FORCE_CLOSE;
      case 2: return LACK_DEPOSIT;
      case 3: return CLIENT_OVER_POSITION_LIMIT;
      case 4: return MEMBER_OVER_POSTION_LIMIT;
      case 5: return NOT_MULTIPLE;
      case 6: return VIOLATION;
      case 7: return OTHER;
      case 8: return PERSON_DELIV;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ForceCloseReaseonType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ForceCloseReaseonType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ForceCloseReaseonType>() {
          public ForceCloseReaseonType findValueByNumber(int number) {
            return ForceCloseReaseonType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return TradeTypeDef.getDescriptor()
        .getEnumTypes().get(10);
  }

  private static final ForceCloseReaseonType[] VALUES = values();

  public static ForceCloseReaseonType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ForceCloseReaseonType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.demo.model.proto.gateway.ForceCloseReaseonType)
}

