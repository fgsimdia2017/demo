// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_msg_def.proto

package com.demo.model.proto.common;

/**
 * <pre>
 * 合约信息
 * </pre>
 *
 * Protobuf type {@code com.demo.model.proto.common.InstrumentInfo}
 */
public  final class InstrumentInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.demo.model.proto.common.InstrumentInfo)
    InstrumentInfoOrBuilder {
  // Use InstrumentInfo.newBuilder() to construct.
  private InstrumentInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InstrumentInfo() {
    lotSize_ = 0;
    priceTick_ = 0L;
    denoinator_ = 0L;
    tradeAble_ = false;
    precision_ = 0;
    status_ = 0;
    createDate_ = "";
    openDate_ = "";
    updateStamp_ = 0L;
    priceTickPrecision_ = 0;
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private InstrumentInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            InstrBaseInfo.Builder subBuilder = null;
            if (base_ != null) {
              subBuilder = base_.toBuilder();
            }
            base_ = input.readMessage(InstrBaseInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(base_);
              base_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            ProductInfo.Builder subBuilder = null;
            if (proc_ != null) {
              subBuilder = proc_.toBuilder();
            }
            proc_ = input.readMessage(ProductInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(proc_);
              proc_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            lotSize_ = input.readUInt32();
            break;
          }
          case 32: {

            priceTick_ = input.readUInt64();
            break;
          }
          case 40: {

            denoinator_ = input.readUInt64();
            break;
          }
          case 48: {

            tradeAble_ = input.readBool();
            break;
          }
          case 56: {

            precision_ = input.readUInt32();
            break;
          }
          case 64: {
            int rawValue = input.readEnum();

            status_ = rawValue;
            break;
          }
          case 74: {
            String s = input.readStringRequireUtf8();

            createDate_ = s;
            break;
          }
          case 82: {
            String s = input.readStringRequireUtf8();

            openDate_ = s;
            break;
          }
          case 88: {

            updateStamp_ = input.readUInt64();
            break;
          }
          case 104: {

            priceTickPrecision_ = input.readUInt32();
            break;
          }
          case 242: {
            StockInstr.Builder subBuilder = null;
            if (instrDataCase_ == 30) {
              subBuilder = ((StockInstr) instrData_).toBuilder();
            }
            instrData_ =
                input.readMessage(StockInstr.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((StockInstr) instrData_);
              instrData_ = subBuilder.buildPartial();
            }
            instrDataCase_ = 30;
            break;
          }
          case 250: {
            FutureInstr.Builder subBuilder = null;
            if (instrDataCase_ == 31) {
              subBuilder = ((FutureInstr) instrData_).toBuilder();
            }
            instrData_ =
                input.readMessage(FutureInstr.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((FutureInstr) instrData_);
              instrData_ = subBuilder.buildPartial();
            }
            instrDataCase_ = 31;
            break;
          }
          case 258: {
            OptionInstr.Builder subBuilder = null;
            if (instrDataCase_ == 32) {
              subBuilder = ((OptionInstr) instrData_).toBuilder();
            }
            instrData_ =
                input.readMessage(OptionInstr.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((OptionInstr) instrData_);
              instrData_ = subBuilder.buildPartial();
            }
            instrDataCase_ = 32;
            break;
          }
          case 266: {
            ForexInstr.Builder subBuilder = null;
            if (instrDataCase_ == 33) {
              subBuilder = ((ForexInstr) instrData_).toBuilder();
            }
            instrData_ =
                input.readMessage(ForexInstr.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((ForexInstr) instrData_);
              instrData_ = subBuilder.buildPartial();
            }
            instrDataCase_ = 33;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return CommonMsgDef.internal_static_com_demo_model_proto_common_InstrumentInfo_descriptor;
  }

  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return CommonMsgDef.internal_static_com_demo_model_proto_common_InstrumentInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            InstrumentInfo.class, Builder.class);
  }

  private int instrDataCase_ = 0;
  private Object instrData_;
  public enum InstrDataCase
      implements com.google.protobuf.Internal.EnumLite {
    STOCK(30),
    FUTURE(31),
    OPT(32),
    FOREX(33),
    INSTRDATA_NOT_SET(0);
    private final int value;
    private InstrDataCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static InstrDataCase valueOf(int value) {
      return forNumber(value);
    }

    public static InstrDataCase forNumber(int value) {
      switch (value) {
        case 30: return STOCK;
        case 31: return FUTURE;
        case 32: return OPT;
        case 33: return FOREX;
        case 0: return INSTRDATA_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public InstrDataCase
  getInstrDataCase() {
    return InstrDataCase.forNumber(
        instrDataCase_);
  }

  public static final int BASE_FIELD_NUMBER = 1;
  private InstrBaseInfo base_;
  /**
   * <pre>
   * 合约基本信息
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
   */
  public boolean hasBase() {
    return base_ != null;
  }
  /**
   * <pre>
   * 合约基本信息
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
   */
  public InstrBaseInfo getBase() {
    return base_ == null ? InstrBaseInfo.getDefaultInstance() : base_;
  }
  /**
   * <pre>
   * 合约基本信息
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
   */
  public InstrBaseInfoOrBuilder getBaseOrBuilder() {
    return getBase();
  }

  public static final int PROC_FIELD_NUMBER = 2;
  private ProductInfo proc_;
  /**
   * <pre>
   * 合约品种信息
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
   */
  public boolean hasProc() {
    return proc_ != null;
  }
  /**
   * <pre>
   * 合约品种信息
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
   */
  public ProductInfo getProc() {
    return proc_ == null ? ProductInfo.getDefaultInstance() : proc_;
  }
  /**
   * <pre>
   * 合约品种信息
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
   */
  public ProductInfoOrBuilder getProcOrBuilder() {
    return getProc();
  }

  public static final int LOT_SIZE_FIELD_NUMBER = 3;
  private int lotSize_;
  /**
   * <pre>
   * 合约规模
   * </pre>
   *
   * <code>optional uint32 lot_size = 3;</code>
   */
  public int getLotSize() {
    return lotSize_;
  }

  public static final int PRICE_TICK_FIELD_NUMBER = 4;
  private long priceTick_;
  /**
   * <pre>
   * 最小变动单位
   * </pre>
   *
   * <code>optional uint64 price_tick = 4;</code>
   */
  public long getPriceTick() {
    return priceTick_;
  }

  public static final int DENOINATOR_FIELD_NUMBER = 5;
  private long denoinator_;
  /**
   * <pre>
   * 报价分母
   * </pre>
   *
   * <code>optional uint64 denoinator = 5;</code>
   */
  public long getDenoinator() {
    return denoinator_;
  }

  public static final int TRADE_ABLE_FIELD_NUMBER = 6;
  private boolean tradeAble_;
  /**
   * <pre>
   * 是否可交易
   * </pre>
   *
   * <code>optional bool trade_able = 6;</code>
   */
  public boolean getTradeAble() {
    return tradeAble_;
  }

  public static final int PRECISION_FIELD_NUMBER = 7;
  private int precision_;
  /**
   * <pre>
   * 精度 
   * </pre>
   *
   * <code>optional uint32 precision = 7;</code>
   */
  public int getPrecision() {
    return precision_;
  }

  public static final int STATUS_FIELD_NUMBER = 8;
  private int status_;
  /**
   * <pre>
   * 合约状态 
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.InstrStatusType status = 8;</code>
   */
  public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * 合约状态 
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.InstrStatusType status = 8;</code>
   */
  public InstrStatusType getStatus() {
    InstrStatusType result = InstrStatusType.valueOf(status_);
    return result == null ? InstrStatusType.UNRECOGNIZED : result;
  }

  public static final int CREATE_DATE_FIELD_NUMBER = 9;
  private volatile Object createDate_;
  /**
   * <pre>
   * 合约创建日期
   * </pre>
   *
   * <code>optional string create_date = 9;</code>
   */
  public String getCreateDate() {
    Object ref = createDate_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      createDate_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 合约创建日期
   * </pre>
   *
   * <code>optional string create_date = 9;</code>
   */
  public com.google.protobuf.ByteString
      getCreateDateBytes() {
    Object ref = createDate_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      createDate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OPEN_DATE_FIELD_NUMBER = 10;
  private volatile Object openDate_;
  /**
   * <pre>
   * 合约上市日期
   * </pre>
   *
   * <code>optional string open_date = 10;</code>
   */
  public String getOpenDate() {
    Object ref = openDate_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      openDate_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 合约上市日期
   * </pre>
   *
   * <code>optional string open_date = 10;</code>
   */
  public com.google.protobuf.ByteString
      getOpenDateBytes() {
    Object ref = openDate_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      openDate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UPDATE_STAMP_FIELD_NUMBER = 11;
  private long updateStamp_;
  /**
   * <pre>
   * 合约更新日期 精确到日
   * </pre>
   *
   * <code>optional uint64 update_stamp = 11;</code>
   */
  public long getUpdateStamp() {
    return updateStamp_;
  }

  public static final int PRICE_TICK_PRECISION_FIELD_NUMBER = 13;
  private int priceTickPrecision_;
  /**
   * <pre>
   * 最小被变动单位精度
   * </pre>
   *
   * <code>optional uint32 price_tick_precision = 13;</code>
   */
  public int getPriceTickPrecision() {
    return priceTickPrecision_;
  }

  public static final int STOCK_FIELD_NUMBER = 30;
  /**
   * <pre>
   * 证券
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.StockInstr stock = 30;</code>
   */
  public StockInstr getStock() {
    if (instrDataCase_ == 30) {
       return (StockInstr) instrData_;
    }
    return StockInstr.getDefaultInstance();
  }
  /**
   * <pre>
   * 证券
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.StockInstr stock = 30;</code>
   */
  public StockInstrOrBuilder getStockOrBuilder() {
    if (instrDataCase_ == 30) {
       return (StockInstr) instrData_;
    }
    return StockInstr.getDefaultInstance();
  }

  public static final int FUTURE_FIELD_NUMBER = 31;
  /**
   * <pre>
   * 期货
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.FutureInstr future = 31;</code>
   */
  public FutureInstr getFuture() {
    if (instrDataCase_ == 31) {
       return (FutureInstr) instrData_;
    }
    return FutureInstr.getDefaultInstance();
  }
  /**
   * <pre>
   * 期货
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.FutureInstr future = 31;</code>
   */
  public FutureInstrOrBuilder getFutureOrBuilder() {
    if (instrDataCase_ == 31) {
       return (FutureInstr) instrData_;
    }
    return FutureInstr.getDefaultInstance();
  }

  public static final int OPT_FIELD_NUMBER = 32;
  /**
   * <pre>
   * 期权 
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.OptionInstr opt = 32;</code>
   */
  public OptionInstr getOpt() {
    if (instrDataCase_ == 32) {
       return (OptionInstr) instrData_;
    }
    return OptionInstr.getDefaultInstance();
  }
  /**
   * <pre>
   * 期权 
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.OptionInstr opt = 32;</code>
   */
  public OptionInstrOrBuilder getOptOrBuilder() {
    if (instrDataCase_ == 32) {
       return (OptionInstr) instrData_;
    }
    return OptionInstr.getDefaultInstance();
  }

  public static final int FOREX_FIELD_NUMBER = 33;
  /**
   * <pre>
   * 外汇
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.ForexInstr forex = 33;</code>
   */
  public ForexInstr getForex() {
    if (instrDataCase_ == 33) {
       return (ForexInstr) instrData_;
    }
    return ForexInstr.getDefaultInstance();
  }
  /**
   * <pre>
   * 外汇
   * </pre>
   *
   * <code>optional .com.demo.model.proto.common.ForexInstr forex = 33;</code>
   */
  public ForexInstrOrBuilder getForexOrBuilder() {
    if (instrDataCase_ == 33) {
       return (ForexInstr) instrData_;
    }
    return ForexInstr.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (base_ != null) {
      output.writeMessage(1, getBase());
    }
    if (proc_ != null) {
      output.writeMessage(2, getProc());
    }
    if (lotSize_ != 0) {
      output.writeUInt32(3, lotSize_);
    }
    if (priceTick_ != 0L) {
      output.writeUInt64(4, priceTick_);
    }
    if (denoinator_ != 0L) {
      output.writeUInt64(5, denoinator_);
    }
    if (tradeAble_ != false) {
      output.writeBool(6, tradeAble_);
    }
    if (precision_ != 0) {
      output.writeUInt32(7, precision_);
    }
    if (status_ != InstrStatusType.UNKNOWN_STATUS.getNumber()) {
      output.writeEnum(8, status_);
    }
    if (!getCreateDateBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, createDate_);
    }
    if (!getOpenDateBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, openDate_);
    }
    if (updateStamp_ != 0L) {
      output.writeUInt64(11, updateStamp_);
    }
    if (priceTickPrecision_ != 0) {
      output.writeUInt32(13, priceTickPrecision_);
    }
    if (instrDataCase_ == 30) {
      output.writeMessage(30, (StockInstr) instrData_);
    }
    if (instrDataCase_ == 31) {
      output.writeMessage(31, (FutureInstr) instrData_);
    }
    if (instrDataCase_ == 32) {
      output.writeMessage(32, (OptionInstr) instrData_);
    }
    if (instrDataCase_ == 33) {
      output.writeMessage(33, (ForexInstr) instrData_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (base_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBase());
    }
    if (proc_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getProc());
    }
    if (lotSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, lotSize_);
    }
    if (priceTick_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, priceTick_);
    }
    if (denoinator_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, denoinator_);
    }
    if (tradeAble_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, tradeAble_);
    }
    if (precision_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, precision_);
    }
    if (status_ != InstrStatusType.UNKNOWN_STATUS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(8, status_);
    }
    if (!getCreateDateBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, createDate_);
    }
    if (!getOpenDateBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, openDate_);
    }
    if (updateStamp_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(11, updateStamp_);
    }
    if (priceTickPrecision_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(13, priceTickPrecision_);
    }
    if (instrDataCase_ == 30) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(30, (StockInstr) instrData_);
    }
    if (instrDataCase_ == 31) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(31, (FutureInstr) instrData_);
    }
    if (instrDataCase_ == 32) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(32, (OptionInstr) instrData_);
    }
    if (instrDataCase_ == 33) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(33, (ForexInstr) instrData_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof InstrumentInfo)) {
      return super.equals(obj);
    }
    InstrumentInfo other = (InstrumentInfo) obj;

    boolean result = true;
    result = result && (hasBase() == other.hasBase());
    if (hasBase()) {
      result = result && getBase()
          .equals(other.getBase());
    }
    result = result && (hasProc() == other.hasProc());
    if (hasProc()) {
      result = result && getProc()
          .equals(other.getProc());
    }
    result = result && (getLotSize()
        == other.getLotSize());
    result = result && (getPriceTick()
        == other.getPriceTick());
    result = result && (getDenoinator()
        == other.getDenoinator());
    result = result && (getTradeAble()
        == other.getTradeAble());
    result = result && (getPrecision()
        == other.getPrecision());
    result = result && status_ == other.status_;
    result = result && getCreateDate()
        .equals(other.getCreateDate());
    result = result && getOpenDate()
        .equals(other.getOpenDate());
    result = result && (getUpdateStamp()
        == other.getUpdateStamp());
    result = result && (getPriceTickPrecision()
        == other.getPriceTickPrecision());
    result = result && getInstrDataCase().equals(
        other.getInstrDataCase());
    if (!result) return false;
    switch (instrDataCase_) {
      case 30:
        result = result && getStock()
            .equals(other.getStock());
        break;
      case 31:
        result = result && getFuture()
            .equals(other.getFuture());
        break;
      case 32:
        result = result && getOpt()
            .equals(other.getOpt());
        break;
      case 33:
        result = result && getForex()
            .equals(other.getForex());
        break;
      case 0:
      default:
    }
    return result;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasBase()) {
      hash = (37 * hash) + BASE_FIELD_NUMBER;
      hash = (53 * hash) + getBase().hashCode();
    }
    if (hasProc()) {
      hash = (37 * hash) + PROC_FIELD_NUMBER;
      hash = (53 * hash) + getProc().hashCode();
    }
    hash = (37 * hash) + LOT_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getLotSize();
    hash = (37 * hash) + PRICE_TICK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPriceTick());
    hash = (37 * hash) + DENOINATOR_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getDenoinator());
    hash = (37 * hash) + TRADE_ABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getTradeAble());
    hash = (37 * hash) + PRECISION_FIELD_NUMBER;
    hash = (53 * hash) + getPrecision();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (37 * hash) + CREATE_DATE_FIELD_NUMBER;
    hash = (53 * hash) + getCreateDate().hashCode();
    hash = (37 * hash) + OPEN_DATE_FIELD_NUMBER;
    hash = (53 * hash) + getOpenDate().hashCode();
    hash = (37 * hash) + UPDATE_STAMP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUpdateStamp());
    hash = (37 * hash) + PRICE_TICK_PRECISION_FIELD_NUMBER;
    hash = (53 * hash) + getPriceTickPrecision();
    switch (instrDataCase_) {
      case 30:
        hash = (37 * hash) + STOCK_FIELD_NUMBER;
        hash = (53 * hash) + getStock().hashCode();
        break;
      case 31:
        hash = (37 * hash) + FUTURE_FIELD_NUMBER;
        hash = (53 * hash) + getFuture().hashCode();
        break;
      case 32:
        hash = (37 * hash) + OPT_FIELD_NUMBER;
        hash = (53 * hash) + getOpt().hashCode();
        break;
      case 33:
        hash = (37 * hash) + FOREX_FIELD_NUMBER;
        hash = (53 * hash) + getForex().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static InstrumentInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static InstrumentInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static InstrumentInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static InstrumentInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static InstrumentInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static InstrumentInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static InstrumentInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static InstrumentInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static InstrumentInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static InstrumentInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(InstrumentInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 合约信息
   * </pre>
   *
   * Protobuf type {@code com.demo.model.proto.common.InstrumentInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.demo.model.proto.common.InstrumentInfo)
      InstrumentInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CommonMsgDef.internal_static_com_demo_model_proto_common_InstrumentInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CommonMsgDef.internal_static_com_demo_model_proto_common_InstrumentInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              InstrumentInfo.class, Builder.class);
    }

    // Construct using com.demo.model.proto.common.InstrumentInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (baseBuilder_ == null) {
        base_ = null;
      } else {
        base_ = null;
        baseBuilder_ = null;
      }
      if (procBuilder_ == null) {
        proc_ = null;
      } else {
        proc_ = null;
        procBuilder_ = null;
      }
      lotSize_ = 0;

      priceTick_ = 0L;

      denoinator_ = 0L;

      tradeAble_ = false;

      precision_ = 0;

      status_ = 0;

      createDate_ = "";

      openDate_ = "";

      updateStamp_ = 0L;

      priceTickPrecision_ = 0;

      instrDataCase_ = 0;
      instrData_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return CommonMsgDef.internal_static_com_demo_model_proto_common_InstrumentInfo_descriptor;
    }

    public InstrumentInfo getDefaultInstanceForType() {
      return InstrumentInfo.getDefaultInstance();
    }

    public InstrumentInfo build() {
      InstrumentInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public InstrumentInfo buildPartial() {
      InstrumentInfo result = new InstrumentInfo(this);
      if (baseBuilder_ == null) {
        result.base_ = base_;
      } else {
        result.base_ = baseBuilder_.build();
      }
      if (procBuilder_ == null) {
        result.proc_ = proc_;
      } else {
        result.proc_ = procBuilder_.build();
      }
      result.lotSize_ = lotSize_;
      result.priceTick_ = priceTick_;
      result.denoinator_ = denoinator_;
      result.tradeAble_ = tradeAble_;
      result.precision_ = precision_;
      result.status_ = status_;
      result.createDate_ = createDate_;
      result.openDate_ = openDate_;
      result.updateStamp_ = updateStamp_;
      result.priceTickPrecision_ = priceTickPrecision_;
      if (instrDataCase_ == 30) {
        if (stockBuilder_ == null) {
          result.instrData_ = instrData_;
        } else {
          result.instrData_ = stockBuilder_.build();
        }
      }
      if (instrDataCase_ == 31) {
        if (futureBuilder_ == null) {
          result.instrData_ = instrData_;
        } else {
          result.instrData_ = futureBuilder_.build();
        }
      }
      if (instrDataCase_ == 32) {
        if (optBuilder_ == null) {
          result.instrData_ = instrData_;
        } else {
          result.instrData_ = optBuilder_.build();
        }
      }
      if (instrDataCase_ == 33) {
        if (forexBuilder_ == null) {
          result.instrData_ = instrData_;
        } else {
          result.instrData_ = forexBuilder_.build();
        }
      }
      result.instrDataCase_ = instrDataCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof InstrumentInfo) {
        return mergeFrom((InstrumentInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(InstrumentInfo other) {
      if (other == InstrumentInfo.getDefaultInstance()) return this;
      if (other.hasBase()) {
        mergeBase(other.getBase());
      }
      if (other.hasProc()) {
        mergeProc(other.getProc());
      }
      if (other.getLotSize() != 0) {
        setLotSize(other.getLotSize());
      }
      if (other.getPriceTick() != 0L) {
        setPriceTick(other.getPriceTick());
      }
      if (other.getDenoinator() != 0L) {
        setDenoinator(other.getDenoinator());
      }
      if (other.getTradeAble() != false) {
        setTradeAble(other.getTradeAble());
      }
      if (other.getPrecision() != 0) {
        setPrecision(other.getPrecision());
      }
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      if (!other.getCreateDate().isEmpty()) {
        createDate_ = other.createDate_;
        onChanged();
      }
      if (!other.getOpenDate().isEmpty()) {
        openDate_ = other.openDate_;
        onChanged();
      }
      if (other.getUpdateStamp() != 0L) {
        setUpdateStamp(other.getUpdateStamp());
      }
      if (other.getPriceTickPrecision() != 0) {
        setPriceTickPrecision(other.getPriceTickPrecision());
      }
      switch (other.getInstrDataCase()) {
        case STOCK: {
          mergeStock(other.getStock());
          break;
        }
        case FUTURE: {
          mergeFuture(other.getFuture());
          break;
        }
        case OPT: {
          mergeOpt(other.getOpt());
          break;
        }
        case FOREX: {
          mergeForex(other.getForex());
          break;
        }
        case INSTRDATA_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      InstrumentInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (InstrumentInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int instrDataCase_ = 0;
    private Object instrData_;
    public InstrDataCase
        getInstrDataCase() {
      return InstrDataCase.forNumber(
          instrDataCase_);
    }

    public Builder clearInstrData() {
      instrDataCase_ = 0;
      instrData_ = null;
      onChanged();
      return this;
    }


    private InstrBaseInfo base_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        InstrBaseInfo, InstrBaseInfo.Builder, InstrBaseInfoOrBuilder> baseBuilder_;
    /**
     * <pre>
     * 合约基本信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
     */
    public boolean hasBase() {
      return baseBuilder_ != null || base_ != null;
    }
    /**
     * <pre>
     * 合约基本信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
     */
    public InstrBaseInfo getBase() {
      if (baseBuilder_ == null) {
        return base_ == null ? InstrBaseInfo.getDefaultInstance() : base_;
      } else {
        return baseBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 合约基本信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
     */
    public Builder setBase(InstrBaseInfo value) {
      if (baseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        base_ = value;
        onChanged();
      } else {
        baseBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 合约基本信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
     */
    public Builder setBase(
        InstrBaseInfo.Builder builderForValue) {
      if (baseBuilder_ == null) {
        base_ = builderForValue.build();
        onChanged();
      } else {
        baseBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 合约基本信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
     */
    public Builder mergeBase(InstrBaseInfo value) {
      if (baseBuilder_ == null) {
        if (base_ != null) {
          base_ =
            InstrBaseInfo.newBuilder(base_).mergeFrom(value).buildPartial();
        } else {
          base_ = value;
        }
        onChanged();
      } else {
        baseBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 合约基本信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
     */
    public Builder clearBase() {
      if (baseBuilder_ == null) {
        base_ = null;
        onChanged();
      } else {
        base_ = null;
        baseBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 合约基本信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
     */
    public InstrBaseInfo.Builder getBaseBuilder() {
      
      onChanged();
      return getBaseFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 合约基本信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
     */
    public InstrBaseInfoOrBuilder getBaseOrBuilder() {
      if (baseBuilder_ != null) {
        return baseBuilder_.getMessageOrBuilder();
      } else {
        return base_ == null ?
            InstrBaseInfo.getDefaultInstance() : base_;
      }
    }
    /**
     * <pre>
     * 合约基本信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrBaseInfo base = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        InstrBaseInfo, InstrBaseInfo.Builder, InstrBaseInfoOrBuilder>
        getBaseFieldBuilder() {
      if (baseBuilder_ == null) {
        baseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            InstrBaseInfo, InstrBaseInfo.Builder, InstrBaseInfoOrBuilder>(
                getBase(),
                getParentForChildren(),
                isClean());
        base_ = null;
      }
      return baseBuilder_;
    }

    private ProductInfo proc_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        ProductInfo, ProductInfo.Builder, ProductInfoOrBuilder> procBuilder_;
    /**
     * <pre>
     * 合约品种信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
     */
    public boolean hasProc() {
      return procBuilder_ != null || proc_ != null;
    }
    /**
     * <pre>
     * 合约品种信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
     */
    public ProductInfo getProc() {
      if (procBuilder_ == null) {
        return proc_ == null ? ProductInfo.getDefaultInstance() : proc_;
      } else {
        return procBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 合约品种信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
     */
    public Builder setProc(ProductInfo value) {
      if (procBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        proc_ = value;
        onChanged();
      } else {
        procBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 合约品种信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
     */
    public Builder setProc(
        ProductInfo.Builder builderForValue) {
      if (procBuilder_ == null) {
        proc_ = builderForValue.build();
        onChanged();
      } else {
        procBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 合约品种信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
     */
    public Builder mergeProc(ProductInfo value) {
      if (procBuilder_ == null) {
        if (proc_ != null) {
          proc_ =
            ProductInfo.newBuilder(proc_).mergeFrom(value).buildPartial();
        } else {
          proc_ = value;
        }
        onChanged();
      } else {
        procBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 合约品种信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
     */
    public Builder clearProc() {
      if (procBuilder_ == null) {
        proc_ = null;
        onChanged();
      } else {
        proc_ = null;
        procBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 合约品种信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
     */
    public ProductInfo.Builder getProcBuilder() {
      
      onChanged();
      return getProcFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 合约品种信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
     */
    public ProductInfoOrBuilder getProcOrBuilder() {
      if (procBuilder_ != null) {
        return procBuilder_.getMessageOrBuilder();
      } else {
        return proc_ == null ?
            ProductInfo.getDefaultInstance() : proc_;
      }
    }
    /**
     * <pre>
     * 合约品种信息
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ProductInfo proc = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ProductInfo, ProductInfo.Builder, ProductInfoOrBuilder>
        getProcFieldBuilder() {
      if (procBuilder_ == null) {
        procBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ProductInfo, ProductInfo.Builder, ProductInfoOrBuilder>(
                getProc(),
                getParentForChildren(),
                isClean());
        proc_ = null;
      }
      return procBuilder_;
    }

    private int lotSize_ ;
    /**
     * <pre>
     * 合约规模
     * </pre>
     *
     * <code>optional uint32 lot_size = 3;</code>
     */
    public int getLotSize() {
      return lotSize_;
    }
    /**
     * <pre>
     * 合约规模
     * </pre>
     *
     * <code>optional uint32 lot_size = 3;</code>
     */
    public Builder setLotSize(int value) {
      
      lotSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 合约规模
     * </pre>
     *
     * <code>optional uint32 lot_size = 3;</code>
     */
    public Builder clearLotSize() {
      
      lotSize_ = 0;
      onChanged();
      return this;
    }

    private long priceTick_ ;
    /**
     * <pre>
     * 最小变动单位
     * </pre>
     *
     * <code>optional uint64 price_tick = 4;</code>
     */
    public long getPriceTick() {
      return priceTick_;
    }
    /**
     * <pre>
     * 最小变动单位
     * </pre>
     *
     * <code>optional uint64 price_tick = 4;</code>
     */
    public Builder setPriceTick(long value) {
      
      priceTick_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 最小变动单位
     * </pre>
     *
     * <code>optional uint64 price_tick = 4;</code>
     */
    public Builder clearPriceTick() {
      
      priceTick_ = 0L;
      onChanged();
      return this;
    }

    private long denoinator_ ;
    /**
     * <pre>
     * 报价分母
     * </pre>
     *
     * <code>optional uint64 denoinator = 5;</code>
     */
    public long getDenoinator() {
      return denoinator_;
    }
    /**
     * <pre>
     * 报价分母
     * </pre>
     *
     * <code>optional uint64 denoinator = 5;</code>
     */
    public Builder setDenoinator(long value) {
      
      denoinator_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 报价分母
     * </pre>
     *
     * <code>optional uint64 denoinator = 5;</code>
     */
    public Builder clearDenoinator() {
      
      denoinator_ = 0L;
      onChanged();
      return this;
    }

    private boolean tradeAble_ ;
    /**
     * <pre>
     * 是否可交易
     * </pre>
     *
     * <code>optional bool trade_able = 6;</code>
     */
    public boolean getTradeAble() {
      return tradeAble_;
    }
    /**
     * <pre>
     * 是否可交易
     * </pre>
     *
     * <code>optional bool trade_able = 6;</code>
     */
    public Builder setTradeAble(boolean value) {
      
      tradeAble_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否可交易
     * </pre>
     *
     * <code>optional bool trade_able = 6;</code>
     */
    public Builder clearTradeAble() {
      
      tradeAble_ = false;
      onChanged();
      return this;
    }

    private int precision_ ;
    /**
     * <pre>
     * 精度 
     * </pre>
     *
     * <code>optional uint32 precision = 7;</code>
     */
    public int getPrecision() {
      return precision_;
    }
    /**
     * <pre>
     * 精度 
     * </pre>
     *
     * <code>optional uint32 precision = 7;</code>
     */
    public Builder setPrecision(int value) {
      
      precision_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 精度 
     * </pre>
     *
     * <code>optional uint32 precision = 7;</code>
     */
    public Builder clearPrecision() {
      
      precision_ = 0;
      onChanged();
      return this;
    }

    private int status_ = 0;
    /**
     * <pre>
     * 合约状态 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrStatusType status = 8;</code>
     */
    public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * 合约状态 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrStatusType status = 8;</code>
     */
    public Builder setStatusValue(int value) {
      status_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 合约状态 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrStatusType status = 8;</code>
     */
    public InstrStatusType getStatus() {
      InstrStatusType result = InstrStatusType.valueOf(status_);
      return result == null ? InstrStatusType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * 合约状态 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrStatusType status = 8;</code>
     */
    public Builder setStatus(InstrStatusType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 合约状态 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.InstrStatusType status = 8;</code>
     */
    public Builder clearStatus() {
      
      status_ = 0;
      onChanged();
      return this;
    }

    private Object createDate_ = "";
    /**
     * <pre>
     * 合约创建日期
     * </pre>
     *
     * <code>optional string create_date = 9;</code>
     */
    public String getCreateDate() {
      Object ref = createDate_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        createDate_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * 合约创建日期
     * </pre>
     *
     * <code>optional string create_date = 9;</code>
     */
    public com.google.protobuf.ByteString
        getCreateDateBytes() {
      Object ref = createDate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        createDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 合约创建日期
     * </pre>
     *
     * <code>optional string create_date = 9;</code>
     */
    public Builder setCreateDate(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      createDate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 合约创建日期
     * </pre>
     *
     * <code>optional string create_date = 9;</code>
     */
    public Builder clearCreateDate() {
      
      createDate_ = getDefaultInstance().getCreateDate();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 合约创建日期
     * </pre>
     *
     * <code>optional string create_date = 9;</code>
     */
    public Builder setCreateDateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      createDate_ = value;
      onChanged();
      return this;
    }

    private Object openDate_ = "";
    /**
     * <pre>
     * 合约上市日期
     * </pre>
     *
     * <code>optional string open_date = 10;</code>
     */
    public String getOpenDate() {
      Object ref = openDate_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        openDate_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * 合约上市日期
     * </pre>
     *
     * <code>optional string open_date = 10;</code>
     */
    public com.google.protobuf.ByteString
        getOpenDateBytes() {
      Object ref = openDate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        openDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 合约上市日期
     * </pre>
     *
     * <code>optional string open_date = 10;</code>
     */
    public Builder setOpenDate(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      openDate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 合约上市日期
     * </pre>
     *
     * <code>optional string open_date = 10;</code>
     */
    public Builder clearOpenDate() {
      
      openDate_ = getDefaultInstance().getOpenDate();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 合约上市日期
     * </pre>
     *
     * <code>optional string open_date = 10;</code>
     */
    public Builder setOpenDateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      openDate_ = value;
      onChanged();
      return this;
    }

    private long updateStamp_ ;
    /**
     * <pre>
     * 合约更新日期 精确到日
     * </pre>
     *
     * <code>optional uint64 update_stamp = 11;</code>
     */
    public long getUpdateStamp() {
      return updateStamp_;
    }
    /**
     * <pre>
     * 合约更新日期 精确到日
     * </pre>
     *
     * <code>optional uint64 update_stamp = 11;</code>
     */
    public Builder setUpdateStamp(long value) {
      
      updateStamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 合约更新日期 精确到日
     * </pre>
     *
     * <code>optional uint64 update_stamp = 11;</code>
     */
    public Builder clearUpdateStamp() {
      
      updateStamp_ = 0L;
      onChanged();
      return this;
    }

    private int priceTickPrecision_ ;
    /**
     * <pre>
     * 最小被变动单位精度
     * </pre>
     *
     * <code>optional uint32 price_tick_precision = 13;</code>
     */
    public int getPriceTickPrecision() {
      return priceTickPrecision_;
    }
    /**
     * <pre>
     * 最小被变动单位精度
     * </pre>
     *
     * <code>optional uint32 price_tick_precision = 13;</code>
     */
    public Builder setPriceTickPrecision(int value) {
      
      priceTickPrecision_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 最小被变动单位精度
     * </pre>
     *
     * <code>optional uint32 price_tick_precision = 13;</code>
     */
    public Builder clearPriceTickPrecision() {
      
      priceTickPrecision_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        StockInstr, StockInstr.Builder, StockInstrOrBuilder> stockBuilder_;
    /**
     * <pre>
     * 证券
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.StockInstr stock = 30;</code>
     */
    public StockInstr getStock() {
      if (stockBuilder_ == null) {
        if (instrDataCase_ == 30) {
          return (StockInstr) instrData_;
        }
        return StockInstr.getDefaultInstance();
      } else {
        if (instrDataCase_ == 30) {
          return stockBuilder_.getMessage();
        }
        return StockInstr.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 证券
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.StockInstr stock = 30;</code>
     */
    public Builder setStock(StockInstr value) {
      if (stockBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        instrData_ = value;
        onChanged();
      } else {
        stockBuilder_.setMessage(value);
      }
      instrDataCase_ = 30;
      return this;
    }
    /**
     * <pre>
     * 证券
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.StockInstr stock = 30;</code>
     */
    public Builder setStock(
        StockInstr.Builder builderForValue) {
      if (stockBuilder_ == null) {
        instrData_ = builderForValue.build();
        onChanged();
      } else {
        stockBuilder_.setMessage(builderForValue.build());
      }
      instrDataCase_ = 30;
      return this;
    }
    /**
     * <pre>
     * 证券
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.StockInstr stock = 30;</code>
     */
    public Builder mergeStock(StockInstr value) {
      if (stockBuilder_ == null) {
        if (instrDataCase_ == 30 &&
            instrData_ != StockInstr.getDefaultInstance()) {
          instrData_ = StockInstr.newBuilder((StockInstr) instrData_)
              .mergeFrom(value).buildPartial();
        } else {
          instrData_ = value;
        }
        onChanged();
      } else {
        if (instrDataCase_ == 30) {
          stockBuilder_.mergeFrom(value);
        }
        stockBuilder_.setMessage(value);
      }
      instrDataCase_ = 30;
      return this;
    }
    /**
     * <pre>
     * 证券
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.StockInstr stock = 30;</code>
     */
    public Builder clearStock() {
      if (stockBuilder_ == null) {
        if (instrDataCase_ == 30) {
          instrDataCase_ = 0;
          instrData_ = null;
          onChanged();
        }
      } else {
        if (instrDataCase_ == 30) {
          instrDataCase_ = 0;
          instrData_ = null;
        }
        stockBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 证券
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.StockInstr stock = 30;</code>
     */
    public StockInstr.Builder getStockBuilder() {
      return getStockFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 证券
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.StockInstr stock = 30;</code>
     */
    public StockInstrOrBuilder getStockOrBuilder() {
      if ((instrDataCase_ == 30) && (stockBuilder_ != null)) {
        return stockBuilder_.getMessageOrBuilder();
      } else {
        if (instrDataCase_ == 30) {
          return (StockInstr) instrData_;
        }
        return StockInstr.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 证券
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.StockInstr stock = 30;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        StockInstr, StockInstr.Builder, StockInstrOrBuilder>
        getStockFieldBuilder() {
      if (stockBuilder_ == null) {
        if (!(instrDataCase_ == 30)) {
          instrData_ = StockInstr.getDefaultInstance();
        }
        stockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            StockInstr, StockInstr.Builder, StockInstrOrBuilder>(
                (StockInstr) instrData_,
                getParentForChildren(),
                isClean());
        instrData_ = null;
      }
      instrDataCase_ = 30;
      onChanged();;
      return stockBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        FutureInstr, FutureInstr.Builder, FutureInstrOrBuilder> futureBuilder_;
    /**
     * <pre>
     * 期货
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.FutureInstr future = 31;</code>
     */
    public FutureInstr getFuture() {
      if (futureBuilder_ == null) {
        if (instrDataCase_ == 31) {
          return (FutureInstr) instrData_;
        }
        return FutureInstr.getDefaultInstance();
      } else {
        if (instrDataCase_ == 31) {
          return futureBuilder_.getMessage();
        }
        return FutureInstr.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 期货
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.FutureInstr future = 31;</code>
     */
    public Builder setFuture(FutureInstr value) {
      if (futureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        instrData_ = value;
        onChanged();
      } else {
        futureBuilder_.setMessage(value);
      }
      instrDataCase_ = 31;
      return this;
    }
    /**
     * <pre>
     * 期货
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.FutureInstr future = 31;</code>
     */
    public Builder setFuture(
        FutureInstr.Builder builderForValue) {
      if (futureBuilder_ == null) {
        instrData_ = builderForValue.build();
        onChanged();
      } else {
        futureBuilder_.setMessage(builderForValue.build());
      }
      instrDataCase_ = 31;
      return this;
    }
    /**
     * <pre>
     * 期货
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.FutureInstr future = 31;</code>
     */
    public Builder mergeFuture(FutureInstr value) {
      if (futureBuilder_ == null) {
        if (instrDataCase_ == 31 &&
            instrData_ != FutureInstr.getDefaultInstance()) {
          instrData_ = FutureInstr.newBuilder((FutureInstr) instrData_)
              .mergeFrom(value).buildPartial();
        } else {
          instrData_ = value;
        }
        onChanged();
      } else {
        if (instrDataCase_ == 31) {
          futureBuilder_.mergeFrom(value);
        }
        futureBuilder_.setMessage(value);
      }
      instrDataCase_ = 31;
      return this;
    }
    /**
     * <pre>
     * 期货
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.FutureInstr future = 31;</code>
     */
    public Builder clearFuture() {
      if (futureBuilder_ == null) {
        if (instrDataCase_ == 31) {
          instrDataCase_ = 0;
          instrData_ = null;
          onChanged();
        }
      } else {
        if (instrDataCase_ == 31) {
          instrDataCase_ = 0;
          instrData_ = null;
        }
        futureBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 期货
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.FutureInstr future = 31;</code>
     */
    public FutureInstr.Builder getFutureBuilder() {
      return getFutureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 期货
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.FutureInstr future = 31;</code>
     */
    public FutureInstrOrBuilder getFutureOrBuilder() {
      if ((instrDataCase_ == 31) && (futureBuilder_ != null)) {
        return futureBuilder_.getMessageOrBuilder();
      } else {
        if (instrDataCase_ == 31) {
          return (FutureInstr) instrData_;
        }
        return FutureInstr.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 期货
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.FutureInstr future = 31;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        FutureInstr, FutureInstr.Builder, FutureInstrOrBuilder>
        getFutureFieldBuilder() {
      if (futureBuilder_ == null) {
        if (!(instrDataCase_ == 31)) {
          instrData_ = FutureInstr.getDefaultInstance();
        }
        futureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            FutureInstr, FutureInstr.Builder, FutureInstrOrBuilder>(
                (FutureInstr) instrData_,
                getParentForChildren(),
                isClean());
        instrData_ = null;
      }
      instrDataCase_ = 31;
      onChanged();;
      return futureBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        OptionInstr, OptionInstr.Builder, OptionInstrOrBuilder> optBuilder_;
    /**
     * <pre>
     * 期权 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.OptionInstr opt = 32;</code>
     */
    public OptionInstr getOpt() {
      if (optBuilder_ == null) {
        if (instrDataCase_ == 32) {
          return (OptionInstr) instrData_;
        }
        return OptionInstr.getDefaultInstance();
      } else {
        if (instrDataCase_ == 32) {
          return optBuilder_.getMessage();
        }
        return OptionInstr.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 期权 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.OptionInstr opt = 32;</code>
     */
    public Builder setOpt(OptionInstr value) {
      if (optBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        instrData_ = value;
        onChanged();
      } else {
        optBuilder_.setMessage(value);
      }
      instrDataCase_ = 32;
      return this;
    }
    /**
     * <pre>
     * 期权 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.OptionInstr opt = 32;</code>
     */
    public Builder setOpt(
        OptionInstr.Builder builderForValue) {
      if (optBuilder_ == null) {
        instrData_ = builderForValue.build();
        onChanged();
      } else {
        optBuilder_.setMessage(builderForValue.build());
      }
      instrDataCase_ = 32;
      return this;
    }
    /**
     * <pre>
     * 期权 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.OptionInstr opt = 32;</code>
     */
    public Builder mergeOpt(OptionInstr value) {
      if (optBuilder_ == null) {
        if (instrDataCase_ == 32 &&
            instrData_ != OptionInstr.getDefaultInstance()) {
          instrData_ = OptionInstr.newBuilder((OptionInstr) instrData_)
              .mergeFrom(value).buildPartial();
        } else {
          instrData_ = value;
        }
        onChanged();
      } else {
        if (instrDataCase_ == 32) {
          optBuilder_.mergeFrom(value);
        }
        optBuilder_.setMessage(value);
      }
      instrDataCase_ = 32;
      return this;
    }
    /**
     * <pre>
     * 期权 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.OptionInstr opt = 32;</code>
     */
    public Builder clearOpt() {
      if (optBuilder_ == null) {
        if (instrDataCase_ == 32) {
          instrDataCase_ = 0;
          instrData_ = null;
          onChanged();
        }
      } else {
        if (instrDataCase_ == 32) {
          instrDataCase_ = 0;
          instrData_ = null;
        }
        optBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 期权 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.OptionInstr opt = 32;</code>
     */
    public OptionInstr.Builder getOptBuilder() {
      return getOptFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 期权 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.OptionInstr opt = 32;</code>
     */
    public OptionInstrOrBuilder getOptOrBuilder() {
      if ((instrDataCase_ == 32) && (optBuilder_ != null)) {
        return optBuilder_.getMessageOrBuilder();
      } else {
        if (instrDataCase_ == 32) {
          return (OptionInstr) instrData_;
        }
        return OptionInstr.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 期权 
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.OptionInstr opt = 32;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        OptionInstr, OptionInstr.Builder, OptionInstrOrBuilder>
        getOptFieldBuilder() {
      if (optBuilder_ == null) {
        if (!(instrDataCase_ == 32)) {
          instrData_ = OptionInstr.getDefaultInstance();
        }
        optBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            OptionInstr, OptionInstr.Builder, OptionInstrOrBuilder>(
                (OptionInstr) instrData_,
                getParentForChildren(),
                isClean());
        instrData_ = null;
      }
      instrDataCase_ = 32;
      onChanged();;
      return optBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ForexInstr, ForexInstr.Builder, ForexInstrOrBuilder> forexBuilder_;
    /**
     * <pre>
     * 外汇
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ForexInstr forex = 33;</code>
     */
    public ForexInstr getForex() {
      if (forexBuilder_ == null) {
        if (instrDataCase_ == 33) {
          return (ForexInstr) instrData_;
        }
        return ForexInstr.getDefaultInstance();
      } else {
        if (instrDataCase_ == 33) {
          return forexBuilder_.getMessage();
        }
        return ForexInstr.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 外汇
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ForexInstr forex = 33;</code>
     */
    public Builder setForex(ForexInstr value) {
      if (forexBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        instrData_ = value;
        onChanged();
      } else {
        forexBuilder_.setMessage(value);
      }
      instrDataCase_ = 33;
      return this;
    }
    /**
     * <pre>
     * 外汇
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ForexInstr forex = 33;</code>
     */
    public Builder setForex(
        ForexInstr.Builder builderForValue) {
      if (forexBuilder_ == null) {
        instrData_ = builderForValue.build();
        onChanged();
      } else {
        forexBuilder_.setMessage(builderForValue.build());
      }
      instrDataCase_ = 33;
      return this;
    }
    /**
     * <pre>
     * 外汇
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ForexInstr forex = 33;</code>
     */
    public Builder mergeForex(ForexInstr value) {
      if (forexBuilder_ == null) {
        if (instrDataCase_ == 33 &&
            instrData_ != ForexInstr.getDefaultInstance()) {
          instrData_ = ForexInstr.newBuilder((ForexInstr) instrData_)
              .mergeFrom(value).buildPartial();
        } else {
          instrData_ = value;
        }
        onChanged();
      } else {
        if (instrDataCase_ == 33) {
          forexBuilder_.mergeFrom(value);
        }
        forexBuilder_.setMessage(value);
      }
      instrDataCase_ = 33;
      return this;
    }
    /**
     * <pre>
     * 外汇
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ForexInstr forex = 33;</code>
     */
    public Builder clearForex() {
      if (forexBuilder_ == null) {
        if (instrDataCase_ == 33) {
          instrDataCase_ = 0;
          instrData_ = null;
          onChanged();
        }
      } else {
        if (instrDataCase_ == 33) {
          instrDataCase_ = 0;
          instrData_ = null;
        }
        forexBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 外汇
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ForexInstr forex = 33;</code>
     */
    public ForexInstr.Builder getForexBuilder() {
      return getForexFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 外汇
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ForexInstr forex = 33;</code>
     */
    public ForexInstrOrBuilder getForexOrBuilder() {
      if ((instrDataCase_ == 33) && (forexBuilder_ != null)) {
        return forexBuilder_.getMessageOrBuilder();
      } else {
        if (instrDataCase_ == 33) {
          return (ForexInstr) instrData_;
        }
        return ForexInstr.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 外汇
     * </pre>
     *
     * <code>optional .com.demo.model.proto.common.ForexInstr forex = 33;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ForexInstr, ForexInstr.Builder, ForexInstrOrBuilder>
        getForexFieldBuilder() {
      if (forexBuilder_ == null) {
        if (!(instrDataCase_ == 33)) {
          instrData_ = ForexInstr.getDefaultInstance();
        }
        forexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ForexInstr, ForexInstr.Builder, ForexInstrOrBuilder>(
                (ForexInstr) instrData_,
                getParentForChildren(),
                isClean());
        instrData_ = null;
      }
      instrDataCase_ = 33;
      onChanged();;
      return forexBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:com.demo.model.proto.common.InstrumentInfo)
  }

  // @@protoc_insertion_point(class_scope:com.demo.model.proto.common.InstrumentInfo)
  private static final InstrumentInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new InstrumentInfo();
  }

  public static InstrumentInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InstrumentInfo>
      PARSER = new com.google.protobuf.AbstractParser<InstrumentInfo>() {
    public InstrumentInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstrumentInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<InstrumentInfo> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<InstrumentInfo> getParserForType() {
    return PARSER;
  }

  public InstrumentInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

