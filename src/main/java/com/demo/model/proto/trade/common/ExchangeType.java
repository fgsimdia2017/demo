// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trade_common_type_def.proto

package com.demo.model.proto.trade.common;

/**
 * <pre>
 * 交易所定义
 * </pre>
 *
 * Protobuf enum {@code com.demo.model.proto.trade.common.ExchangeType}
 */
public enum ExchangeType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 未知
   * </pre>
   *
   * <code>UNKNOWN = 0;</code>
   */
  UNKNOWN(0),
  /**
   * <pre>
   * 纽约商品交易所
   * </pre>
   *
   * <code>NYMEX = 1;</code>
   */
  NYMEX(1),
  /**
   * <pre>
   * 纽约黄金交易所
   * </pre>
   *
   * <code>COMEX = 2;</code>
   */
  COMEX(2),
  /**
   * <pre>
   * 芝加哥商品交易所
   * </pre>
   *
   * <code>CBOT = 3;</code>
   */
  CBOT(3),
  /**
   * <pre>
   * 芝加哥商品交易所
   * </pre>
   *
   * <code>CME = 4;</code>
   */
  CME(4),
  /**
   * <pre>
   * 新加坡交易所
   * </pre>
   *
   * <code>SGX = 5;</code>
   */
  SGX(5),
  /**
   * <pre>
   * 香港期货交易所
   * </pre>
   *
   * <code>HKFE = 6;</code>
   */
  HKFE(6),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 未知
   * </pre>
   *
   * <code>UNKNOWN = 0;</code>
   */
  public static final int UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * 纽约商品交易所
   * </pre>
   *
   * <code>NYMEX = 1;</code>
   */
  public static final int NYMEX_VALUE = 1;
  /**
   * <pre>
   * 纽约黄金交易所
   * </pre>
   *
   * <code>COMEX = 2;</code>
   */
  public static final int COMEX_VALUE = 2;
  /**
   * <pre>
   * 芝加哥商品交易所
   * </pre>
   *
   * <code>CBOT = 3;</code>
   */
  public static final int CBOT_VALUE = 3;
  /**
   * <pre>
   * 芝加哥商品交易所
   * </pre>
   *
   * <code>CME = 4;</code>
   */
  public static final int CME_VALUE = 4;
  /**
   * <pre>
   * 新加坡交易所
   * </pre>
   *
   * <code>SGX = 5;</code>
   */
  public static final int SGX_VALUE = 5;
  /**
   * <pre>
   * 香港期货交易所
   * </pre>
   *
   * <code>HKFE = 6;</code>
   */
  public static final int HKFE_VALUE = 6;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static ExchangeType valueOf(int value) {
    return forNumber(value);
  }

  public static ExchangeType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN;
      case 1: return NYMEX;
      case 2: return COMEX;
      case 3: return CBOT;
      case 4: return CME;
      case 5: return SGX;
      case 6: return HKFE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ExchangeType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ExchangeType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ExchangeType>() {
          public ExchangeType findValueByNumber(int number) {
            return ExchangeType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return TradeCommonTypeDef.getDescriptor()
        .getEnumTypes().get(4);
  }

  private static final ExchangeType[] VALUES = values();

  public static ExchangeType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ExchangeType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.demo.model.proto.trade.common.ExchangeType)
}

