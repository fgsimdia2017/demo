syntax = "proto3";

package com.smart.market.model.gateway;
option java_multiple_files = true;

enum TradeMsgType
{
    UNKNOWN_MSG                   = 0;          // 未知的消息类型
    
    HEARTBEAT_REQ                 = 1;          // 心跳同步请求
    HEARTBEAT_RSP                 = 2;          // 心跳同步应答
                                                
    VELOCITY_REQ                  = 3;          // 测速请求
    VELOCITY_RSP                  = 4;          // 测速应答
    
    //--------- 交易使用命令字----------------------------------------------------
    ACCOUNT_HEARTBEAT_REQ         = 101;        // 交易账户心跳请求 
    ACCOUNT_HEARTBEAT_RSP         = 102;        // 交易账户心跳应答
                                  
    LOGIN_REQ                     = 103;        // 用户登录请求
    LOGIN_RSP                     = 104;        // 用户登录应答
                                  
    LOGOUT_REQ                    = 105;        // 用户登出请求
    LOGOUT_RSP                    = 106;        // 用户登出应答
                                  
    MOD_PWD_REQ                   = 107;       // 用户修改密码请求
    MOD_PWD_RSP                   = 108;       // 用户修改密码应答 

    VERTIFICATE_CODE_REQ          = 109;
    VERTIFICATE_CODE_RSP          = 110;

    SET_VERTIFICATE_CODE_REQ      = 111;
                                  
    // 用户查询类                      
    QUERY_LOGIN_STATUS_REQ        = 120;       // 查询用登录状态 
    QUERY_LOGIN_STATUS_RSP        = 121;       // 查询用登录状态 
                                  
    QUERY_BALANCE_REQ             = 124;       // 查询账户资金请求
    QUERY_BALANCE_RSP             = 125;       // 查询账户资金应答
                                  
    QUERY_ORDER_REQ               = 126;       // 查询当日委托请求
    QUERY_ORDER_RSP               = 127;       // 查询当日委托应答
                                  
    QUERY_POSITION_SUM_REQ        = 128;       // 查询持仓汇总请求
    QUERY_POSITION_SUM_RSP        = 129;       // 查询持仓汇总应答 
                                  
    QUERY_POSITION_DETAIL_REQ     = 130;       // 查询持仓明细请求
    QUERY_POSITION_DETAIL_RSP     = 131;       // 查询持仓明细应答  
                                  
    QUERY_MATCH_REQ                = 132;       // 查询成交请求
    QUERY_MATCH_RSP                = 133;       // 查询成交应答 
                                  
    QUERY_HIS_ORDER_REQ           = 134;       // 查询历史委托请求
    QUERY_HIS_ORDER_RSP           = 135;       // 查询历史委托应答
                                  
    QUERY_HIS_MATCH_REQ            = 136;       // 查询历史成交请求
    QUERY_HIS_MATCH_RSP            = 137;       // 查询历史成交应答
                                  
    QUERY_HIS_POSITION_REQ        = 139;       // 查询历史持仓请求
    QUERY_HIS_POSITION_RSP        = 140;       // 查询历史持仓应答
                                  
    QUERY_FEE_INFO_REQ            = 141;       // 查询费用请求
    QUERY_FEE_INFO_RSP            = 142;       // 查询费用应答
    
    QUERY_ACCOUNT_MARGIN_RENT_REQ = 143;       // 账户保证金计算参数请求
    QUERY_ACCOUNT_MARGIN_RENT_RSP = 144;       // 账户保证金计算参数应答 
    
    QUERY_ACCOUNT_FEE_RENT_REQ    = 145;       // 查询客户手续费计算参数请求
    QUERY_ACCOUNT_FEE_RENT_RSP    = 146;       // 查询客户手续费计算参数应答  
    
    QUERY_FREE_BALANCE_REQ        = 147;       // 查询资金请求
    QUERY_FREE_BALANCE_RSP        = 148;       // 查询资金应答 

	QUERY_EXCHANGE_REQ            = 149;	   // 查询交易所信息请求
	QUERY_EXCHANGE_RSP            = 150;       // 查询交易所信息应答 

	QUERY_CONTRACT_REQ            = 151;       // 查询系统中指定品种的合约信息请求
	QUERY_CONTRACT_RSP            = 152;       // 查询系统中指定品种的合约信息应答

	QUERY_COMMODITY_REQ           = 153;       // 查询系统品种信息请求
	QUERY_COMMODITY_RSP           = 154;       // 查询系统品种信息应答

	QUERY_CURRENCY_REQ            = 155;        // 查询货币信息请求
	QUERY_CURRENCY_RSP            = 156;        // 查询货币信息应答

    INSERT_ORDER_REQ              = 190;       // 用户委托请求
    INSERT_ORDER_RSP              = 191;       // 用户委托应答 
                                  
    CANCEL_ORDER_REQ              = 192;       // 用户撤单请求
    CANCEL_ORDER_RSP              = 193;       // 用户撤单应答
    
    MOD_ORDER_REQ                 = 194;       // 用户改单请求
    MOD_ORDER_RSP                 = 195;       // 用户改单应答
    
    // 主推消息类
    PUSH_ORDER                    = 260;       // 委托回报，主推消息 
    PUSH_MATCH                    = 261;       // 成交回报，主推消息
    PUSH_FUND                     = 262;       // 资金变动主推消息
    PUSH_POSITION                 = 263;       // 持仓变动主推消息
    PUSH_PROFIT                   = 264;       // 持仓盈亏变动主推消息
    PUSH_ACCOUNT_DISCONNECT       = 265;       // 主推交易账户与柜台断线通知  
	PUSH_POSITION_SUMMARY         = 266;       // 持仓汇总变动推送
	PUSH_CONTRACT                 = 267;       // 合约变动推送
	PUSH_API_READY                = 268;       // api初始化完毕推送
    PUSH_2FA_CONTACTINFO          = 269;       // 动态认证接收方式


    KICK_ACCOUNT                  = 300;   
}

// 业务处理相关错误码
enum TreadeRetCode
{
	SUCCESSED					=	0;
	PARSE_PROTO_FAILED			=	9998;      // 解析请要信息失败
	VERIFY_SESSION_FAILED		=	9997;      // session校验失败
	ACCOUNT_NOT_LOGIN		    =	9996;      // 用户未登陆
	API_NOT_READY		        =	9995;      // esunny api 未初始化
	ACCOUNT_LOGIN_TIMEOUT       =   9994;      // 心跳超时
	UNDEFINE_REQUEST_TYPE       =   9993;      // 未定义请求类型 
	UNDEFINE_RESPONSE_TYPE      =   9992;      // 未定义响应类型 
	UNDEFINE_RETURN_TYPE        =   9991;      // 未定义推送类型 
	ESUNNY_FRONT_SERVER_ERROR   =   9990;      // esunny 错误类型
    ESUNNY_ERROR_NEED_2FA       =   10003;     // 需要动态认证
    ESUNNY_ERROR_NO_CONTACT     =   10016;     // 没有绑定二次认证信息
}

// 委托类型 
enum OrderTypeType
{
	UNKNOWN_ORDER_STATUS	= 0;        //未知 
    MARKET					= 1;        // 市价
    LIMIT					= 2;        // 限价
    STOP_MARKET             = 3;        // 市价止损
    STOP_LIMIT              = 4;        // 限价止损
    OPT_EXEC                = 5;        // 期权行权
    OPT_ABANDON             = 6;        // 期权弃权
    REQQUOT                 = 7;        // 询价
    RSPQUOT					= 8;        // 应价
    ICEBERG					= 9;       // 冰山单
    GHOST					= 10;       // 影子单
    HKEX_AUCTION            = 11;       // 港交所竞价单
    SWAP					= 12;       // 互换
    LOCK					= 13;       // 证券锁定
    UNLOCK					= 14;       // 证券解锁
    ENHANCE                 = 15;       // 增强限价单
}

// 开平标志
enum OffsetType
{
    UNKNOWN_OFFSET     = 0;     // 未知的开平标志 "N"
    OPEN               = 1;     // 开仓
    CLOSE              = 2;     // 平仓
    CLOSE_TODAY        = 3;     // 平今
    CLOSE_YESTERDAY    = 4;     // 平昨
    FORCE_CLOSE        = 5;     // 强平
    FORCEOFF           = 6;     // 强减
    LOCAL_FORCE_CLOSE  = 7;     // 本地强平
}


// 持仓方向
enum PositionDirectType
{
    UNKNOWN_DIRECT       = 0;                   // 未知持仓类型
    NET                  = 1;                   // 净持仓 净持仓是指某个商品某个月份合约持仓的多单和空单相抵后的余额，称为净持仓，简称净仓,
                                                // 比如某个商品某月份合约持有多单20手，空单15手，则净持仓就是5手多单
    LONG                 = 2;                   // 多头持仓
    SHORT                = 3;                   // 空头持仓
    GROSS                = 4;                   // 综合持仓
}

// 持仓类型
enum PositionType 
{
    UNKNOWN_POSITION    = 0;                    // 未知的持仓类型
    YESTERDAY_POS       = 1;                    // 昨仓
    TODAY_POS           = 2;                    // 今仓
}

// 保证金计算方法
enum CalculateModeType
{
    UNKNOWN_TYPE     = 0; 
    COMBINE          = 1;                       // 比例+定额（仅限手续费）大于0.01部分为定额，小于0.01部分为比例，如：0.001为比例收取1%
    PERCENTAGE       = 2;                       // 比例
    QUOTA            = 3;                       // 定额
    CHAPERCENTAGE    = 4;                       // 差值比例
    CHAQUOTA         = 5;                       // 差值定额
    DISCOUNT         = 6;                       // 折扣
}


// 投保标志
enum HedgeFlagType
{
    UNKNOWN_HEDGE       = 0;     // 未知的投保标志
    HEDGING             = 1;     // 保值
    SPECULATE           = 2;     // 投机   即风险单
    ARBITRAGE           = 3;     // 套利
    MARKETMAKER         = 4;     // 做市商
    RESERVE             = 5;     // 备兑
}

// 委托状态 
enum OrderStatusType
{
    UNKNOWN_ORDER_STATUS_TYPE	    = 0;	
    SUBMIT				= 1;        // 终端提交
    ACCEPT              = 2;        // 已受理
    TRIGGERING          = 3;        // 策略待触发
    EXCTRIGGERING       = 4;        // 交易所待触发
    QUEUED				= 5;        // 已排队
    PARTFINISHED        = 6;        // 部分成交
    FINISHED            = 7;        // 完全成交  完全成交
    CANCELING           = 8;        // 待撤消(排队临时状态) 待撤消(排队临时状态)
    MODIFYING           = 9;        // 待修改(排队临时状态) 完全撤单
    CANCELED            = 10;       // 完全撤单 指令失败
    LEFTDELETED         = 11;       // 已撤余单
    FAIL                = 12;       // 指令失败
    DELETED             = 13;       // 策略删除
    SUPPENDED           = 14;       // 已挂起
    DELETEDFOREXPIRE    = 15;       // 到期删除
    EFFECT              = 16;       // 已生效——询价成功）
    APPLY               = 17;       // 已申请——行权、弃权、套利等申请成功）
}

// 委托操作类型
enum OrderOpType
{
    UNKNOWN_ORDER_OP = 0;         // 未知
    INSERT           = 1;         // 下单
    MODIFY_TYPE      = 2;         // 改单
    CANCEL           = 3;         // 撤单
    SUSPEND          = 4;         // 挂起
    ACTIVATE         = 5;         // 激活
    DELETE           = 6;         // 删除（系统）
}


// 报单强平原因
enum ForceCloseReaseonType
{
    UNKNOWN_FORCE_CLOSE           = 0;             // 未知的强平原因
    NOT_FORCE_CLOSE               = 1;             // 非强平
    LACK_DEPOSIT                  = 2;             // 资金不足
    CLIENT_OVER_POSITION_LIMIT    = 3;             // 客户超仓
    MEMBER_OVER_POSTION_LIMIT     = 4;             // 会员超仓
    NOT_MULTIPLE                  = 5;             // 持仓非整数倍
    VIOLATION                     = 6;             // 违规
    OTHER                         = 7;             // 其他
    PERSON_DELIV                  = 8;             // 自然人临近交割
}


// 成交量类型
enum MatchVolumeConditionType
{
    UNKNOWN_MATCH_VOL  = 0;                      // 未知的成交量类型 
    ANY_VOL           = 1;                      // 任意数量
    MIN_VOL           = 2;                      // 最小数量
    ALL_VOL           = 3;                      // 全部数量
}

// 触发条件类型
enum ContingentConditionType
{
    UNKNOWN_CONTINGENT        = 0;             // 未知的触发条件
    IMMEDIATELY               = 1;             // 立即
    TOUCH                     = 2;             // 止损
    TOUCH_PROFIT              = 3;             // 止盈
    PARKED_ORDER              = 4;             // 预埋单
    LAST_PRICE_GT_STOP_PRICE  = 5;             // 最新价大于条件价
    LAST_PRICE_GE_STOP_PRICE  = 6;             // 最新价大于等于条件价
    LAST_PRICE_LT_STOP_PRICE  = 7;             // 最新价小于条件价
    LAST_PRICE_LE_STOP_PRICE  = 8;             // 最新价小于等于条件价
    ASK_PRICE_GT_STOP_PRICE   = 9;             // 卖一价大于条件价
    ASK_PRICE_GE_STOP_PRICE   = 10;            // 卖一价大于等于条件价
    ASK_PRICE_LT_STOP_PRICE   = 11;            // 卖一价小于条件价
    ASK_PRICE_LE_STOP_PRICE   = 12;            // 卖一价小于等于条件价
    BID_PRICE_GT_STOP_PRICE   = 13;            // 买一价大于条件价
    BID_PRICE_GE_STOP_PRICE   = 14;            // 买一价大于等于条件价
    BID_PRICE_LT_STOP_PRICE   = 15;            // 买一价小于条件价
    BID_PRICE_LE_STOP_PRICE   = 16;            // 买一价小于等于条件价
}

// 期权类型
enum OptionType
{
    UNKNOWN_OPT   = 0;                          // 未知期权类型 
    CALL          = 1;                          // 看涨期权
    PUT           = 2;                          // 看跌期权
}

// 期权定价方式
enum OptionStrikeType
{
    UNKNOWN_STRIKE    = 0;                      // 未知的定价方式
    CONTINENTAL       = 1;                      // 欧式定价
    AMERICAN          = 2;                      // 美式
    BERMUDA           = 3;                      // 百慕大
}

// 期权执行结果类型
enum OptionExecResultType
{
    UNKNOWN_EXEC_RESULT = 0;                     // 未知
    NO_EXEC             = 1;                     // 没有执行
    CANCELED_OPT        = 2;                     // 已经取消
    EXEC_OK             = 3;                     // 执行成功
    NO_POSITION         = 4;                     // 期权持仓不足
    NO_DEPOSIT          = 5;                     // 资金不足
    NO_PARTICIPANT      = 6;                     // 会员不存在
    NO_CLIENT           = 7;                     // 客户不存在
    NO_INSTRUMENT       = 8;                     // 合约不存在
    NO_RIGHT            = 9;                     // 没有权限
    INVALID_VOL         = 10;                    // 无效的数量
    NO_ENOUGH_HIS_TRADE = 11;                    // 没有足够历史成交
}

// 组合合约组合类型
enum CombinationType
{
    UNKNOWN_COMB      = 0;                     // 未知
    FUTURE            = 1;                     // 期货组合
    COMBT_BUL         = 2;                     // 垂直价差BUL
    COMBT_BER         = 3;                     // 垂直价差BER
    COMBT_STD         = 4;                     // 跨式组合
    COMBT_STG         = 5;                     // 宽跨式组合
    COMBT_PRT         = 6;                     // 备兑组合
    COMBT_CLD         = 7;                     // 时间价差组合
}

// 结算类型
enum SettleFlag
{
    UNKNOWN_SETTLE_FLAG = 0;     // 未知结算标志
    AUTO_SETTLE         = 1;     // 自动结算
    MANUAL_SETTLE       = 2;     // 人工结算
}

// 账户状态
enum AccountStatus
{
    UNKNOWN_STATUS   = 0;       // 未知状态  
    NORMAL_ACCOUNT   = 1;       // 正常 
    CANCEL_ACCOUNT   = 2;       // 销户
    SLEEP            = 3;       // 休眠
    FROZEN           = 4;       // 冻结
}

// 买卖方向 BuySellDirectType
enum BSDirectType
{
    UNKNOWN_BS         = 0;                     // 未知的买卖方向
    BUY                = 1;                     // 买
    SELL               = 2;                     // 卖 
}

// 有效日期类型
enum TimeInForceType
{
    GFD                  = 0;                // 当日有效
    GTC                  = 1;                // 取消前有效
    GTD                  = 2;                // 指定日期前有效
    FAK                  = 3;                // FAK或IOC 
    FOK                  = 4;                // FOK
}

// 账户类型
enum AccountType
{
    UNKNOWN_ACCOUNT = 0;
    ACCOUNT         = 1;        // 资金账号
    SEAT_NO         = 2;        // 股东代码
    TRADE_CARD      = 3;        // 交易卡
    BANK_CARD       = 4;        // 银行卡
    SH_A_SEAT_NO    = 5;        // 沪A股东代码 
    SH_B_SEAT_NO    = 6;        // 沪B股东代码 
    SZ_A_SEAT_NO    = 7;        // 深A 股东代码
    SZ_B_SEAT_NO    = 8;        // 深B 股东代码
    CUSTOMER        = 9;        // 客户号
}

// 客户类型
enum ClientAccType
{
    UNKNOWN_CLINET_ACC  = 0; 
    CLIENT_CASH         = 1;     // 现金客户
    CLIENT_MARGIN       = 2;     // 保证金账户
    CLIENT_HOUSE        = 3;     // House
    CLIENT_STAFF        = 4;     // Staff
}

// 客户交易状态 
enum AccountRightType
{
    UNKNOWN_RIGHT     = 0;       // 未知权限
    ACC_RIGHT_NORMAL  = 1;       // 正常交易状态 
    ACC_RIGHT_NOTRADE = 2;       // 禁止交易
    ACC_RIGHT_CLOSE   = 3;       // 只可平仓
}

















